<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.base.dao.DataDictionaryMapper">
	<resultMap id="BaseResultMap" type="com.base.model.DataDictionary">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="value" property="value" jdbcType="VARCHAR" />
		<result column="flag" property="flag" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="sequence" property="sequence" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="creation_time" property="creationTime"
			jdbcType="TIMESTAMP" />
		<result column="retention" property="retention" jdbcType="VARCHAR" />
		<result column="ext" property="ext" jdbcType="VARCHAR" />
		<result column="temporary" property="temporary" jdbcType="VARCHAR" />
		<result column="provisional" property="provisional" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
                </when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
                </when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
                </when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
                  </foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
                </when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
                </when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
                </when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
                  </foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, code, value, flag, name, description, sequence, status,
		creation_time, retention,
		ext
  </sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.base.model.DataDictionaryExample">
		select
		<if test="distinct">
			distinct
    </if>
		<choose>
			<when test="column != null"> ${column} 		</when>
			<otherwise>
				<include refid="Base_Column_List" />
			</otherwise>
		</choose>
		from tb_data_dictionary
		${join}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="groupBy != null"> group by ${groupBy}    </if>
		<if test="having != null"> having ${having}    </if>
		<if test="orderByClause != null">
			order by ${orderByClause}
    </if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from tb_data_dictionary
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from tb_data_dictionary
		where id = #{id,jdbcType=INTEGER}
  </delete>
	<delete id="deleteByExample" parameterType="com.base.model.DataDictionaryExample">
		delete from tb_data_dictionary
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.base.model.DataDictionary">
		insert into tb_data_dictionary (id, code, value,
		flag, name, description,
		sequence, status, creation_time,
		retention, ext)
		values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR},
		#{value,jdbcType=VARCHAR},
		#{flag,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
		#{sequence,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR},
		#{creationTime,jdbcType=TIMESTAMP},
		#{retention,jdbcType=VARCHAR}, #{ext,jdbcType=VARCHAR})
  </insert>
	<insert id="insertSelective" parameterType="com.base.model.DataDictionary"
		useGeneratedKeys="true" keyProperty="id">
		insert into tb_data_dictionary
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
      </if>
			<if test="code != null">
				code,
      </if>
			<if test="value != null">
				value,
      </if>
			<if test="flag != null">
				flag,
      </if>
			<if test="name != null">
				name,
      </if>
			<if test="description != null">
				description,
      </if>
			<if test="sequence != null">
				sequence,
      </if>
			<if test="status != null">
				status,
      </if>
			<if test="creationTime != null">
				creation_time,
      </if>
			<if test="retention != null">
				retention,
      </if>
			<if test="ext != null">
				ext,
      </if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
      </if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
      </if>
			<if test="value != null">
				#{value,jdbcType=VARCHAR},
      </if>
			<if test="flag != null">
				#{flag,jdbcType=VARCHAR},
      </if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
      </if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
      </if>
			<if test="sequence != null">
				#{sequence,jdbcType=INTEGER},
      </if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
      </if>
			<if test="creationTime != null">
				#{creationTime,jdbcType=TIMESTAMP},
      </if>
			<if test="retention != null">
				#{retention,jdbcType=VARCHAR},
      </if>
			<if test="ext != null">
				#{ext,jdbcType=VARCHAR},
      </if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.base.model.DataDictionaryExample"
		resultType="java.lang.Integer">
		select count(*) from tb_data_dictionary
		${join}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update tb_data_dictionary
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
      </if>
			<if test="record.code != null">
				code = #{record.code,jdbcType=VARCHAR},
      </if>
			<if test="record.value != null">
				value = #{record.value,jdbcType=VARCHAR},
      </if>
			<if test="record.flag != null">
				flag = #{record.flag,jdbcType=VARCHAR},
      </if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
      </if>
			<if test="record.description != null">
				description = #{record.description,jdbcType=VARCHAR},
      </if>
			<if test="record.sequence != null">
				sequence = #{record.sequence,jdbcType=INTEGER},
      </if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=VARCHAR},
      </if>
			<if test="record.creationTime != null">
				creation_time = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
			<if test="record.retention != null">
				retention = #{record.retention,jdbcType=VARCHAR},
      </if>
			<if test="record.ext != null">
				ext = #{record.ext,jdbcType=VARCHAR},
      </if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update tb_data_dictionary
		set id = #{record.id,jdbcType=INTEGER},
		code = #{record.code,jdbcType=VARCHAR},
		value = #{record.value,jdbcType=VARCHAR},
		flag = #{record.flag,jdbcType=VARCHAR},
		name = #{record.name,jdbcType=VARCHAR},
		description = #{record.description,jdbcType=VARCHAR},
		sequence = #{record.sequence,jdbcType=INTEGER},
		status = #{record.status,jdbcType=VARCHAR},
		creation_time = #{record.creationTime,jdbcType=TIMESTAMP},
		retention = #{record.retention,jdbcType=VARCHAR},
		ext = #{record.ext,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.base.model.DataDictionary">
		update tb_data_dictionary
		<set>
			<if test="code != null">
				code = #{code,jdbcType=VARCHAR},
      </if>
			<if test="value != null">
				value = #{value,jdbcType=VARCHAR},
      </if>
			<if test="flag != null">
				flag = #{flag,jdbcType=VARCHAR},
      </if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
      </if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
      </if>
			<if test="sequence != null">
				sequence = #{sequence,jdbcType=INTEGER},
      </if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
      </if>
			<if test="creationTime != null">
				creation_time = #{creationTime,jdbcType=TIMESTAMP},
      </if>
			<if test="retention != null">
				retention = #{retention,jdbcType=VARCHAR},
      </if>
			<if test="ext != null">
				ext = #{ext,jdbcType=VARCHAR},
      </if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.base.model.DataDictionary">
		update tb_data_dictionary
		set code = #{code,jdbcType=VARCHAR},
		value = #{value,jdbcType=VARCHAR},
		flag = #{flag,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		description = #{description,jdbcType=VARCHAR},
		sequence = #{sequence,jdbcType=INTEGER},
		status = #{status,jdbcType=VARCHAR},
		creation_time = #{creationTime,jdbcType=TIMESTAMP},
		retention = #{retention,jdbcType=VARCHAR},
		ext = #{ext,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
  </update>
	<select id="selectByModel" resultMap="BaseResultMap"
		parameterType="com.base.model.DataDictionary">
		select
		<include refid="Base_Column_List" />
		from tb_data_dictionary
		where 1 = 1
		<if test="code != null"> and
			code = #{code,jdbcType=VARCHAR}
      </if>
		<if test="value != null"> and
			value = #{value,jdbcType=VARCHAR}
      </if>
		<if test="flag != null"> and
			flag = #{flag,jdbcType=VARCHAR}
      </if>
		<if test="name != null"> and
			name = #{name,jdbcType=VARCHAR}
      </if>
		<if test="description != null"> and
			description = #{description,jdbcType=VARCHAR}
      </if>
		<if test="sequence != null"> and
			sequence = #{sequence,jdbcType=INTEGER}
      </if>
		<if test="status != null"> and
			status = #{status,jdbcType=VARCHAR}
      </if>
		<if test="creationTime != null"> and
			creation_time = #{creationTime,jdbcType=TIMESTAMP}
      </if>
		<if test="retention != null"> and
			retention = #{retention,jdbcType=VARCHAR}
      </if>
		<if test="ext != null"> and
			ext = #{ext,jdbcType=VARCHAR}
      </if>
	</select>
	<select id="distinct" resultMap="BaseResultMap"
		parameterType="com.base.model.DataDictionaryExample">
		select distinct ${column} from tb_data_dictionary
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<select id="sum" resultType="java.lang.String"
		parameterType="com.base.model.DataDictionaryExample">
		select sum(${column}) as ${column} from tb_data_dictionary
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<select id="min" resultType="java.lang.String"
		parameterType="com.base.model.DataDictionaryExample">
		select min(${column}) as ${column} from tb_data_dictionary
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<select id="max" resultType="java.lang.String"
		parameterType="com.base.model.DataDictionaryExample">
		select max(${column}) as ${column} from tb_data_dictionary
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<select id="avg" resultType="java.lang.String"
		parameterType="com.base.model.DataDictionaryExample">
		select avg(${column}) as ${column} from tb_data_dictionary
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<sql id="Base_Column_List_Map">
		id, code, value, flag, name, description, sequence, status, creation_time
		as creationTime, retention,
		ext
  </sql>
	<select id="selectByExampleForMap" resultType="map"
		parameterType="com.base.model.DataDictionaryExample">
		select
		<if test="distinct"> distinct    </if>
		<choose>
			<when test="column != null"> ${column} 		</when>
			<otherwise>
				<include refid="Base_Column_List_Map" />
			</otherwise>
		</choose>
		from tb_data_dictionary
		${join}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="groupBy != null"> group by ${groupBy}    </if>
		<if test="having != null"> having ${having}    </if>
		<if test="orderByClause != null"> order by ${orderByClause}    </if>
	</select>
	<resultMap id="BaseResultMapJoin" type="com.base.model.DataDictionary">
		<id column="datadictionary_id" property="id" jdbcType="INTEGER" />
		<result column="datadictionary_code" property="code" jdbcType="VARCHAR" />
		<result column="datadictionary_value" property="value"
			jdbcType="VARCHAR" />
		<result column="datadictionary_flag" property="flag" jdbcType="VARCHAR" />
		<result column="datadictionary_name" property="name" jdbcType="VARCHAR" />
		<result column="datadictionary_description" property="description"
			jdbcType="VARCHAR" />
		<result column="datadictionary_sequence" property="sequence"
			jdbcType="INTEGER" />
		<result column="datadictionary_status" property="status"
			jdbcType="VARCHAR" />
		<result column="datadictionary_creation_time" property="creationTime"
			jdbcType="TIMESTAMP" />
		<result column="datadictionary_retention" property="retention"
			jdbcType="VARCHAR" />
		<result column="datadictionary_ext" property="ext" jdbcType="VARCHAR" />
	</resultMap>
	<insert id="batchInsert" parameterType="java.util.List">
		insert into tb_data_dictionary (id, code, value,
		flag, name, description,
		sequence, status, creation_time,
		retention, ext)
		values
		<foreach collection="list" item="item" index="index"
			separator=","> (#{item.id,jdbcType=INTEGER},
			#{item.code,jdbcType=VARCHAR}, #{item.value,jdbcType=VARCHAR},
			#{item.flag,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR},
			#{item.description,jdbcType=VARCHAR},
			#{item.sequence,jdbcType=INTEGER}, #{item.status,jdbcType=VARCHAR},
			#{item.creationTime,jdbcType=TIMESTAMP},
			#{item.retention,jdbcType=VARCHAR}, #{item.ext,jdbcType=VARCHAR})
		</foreach>
	</insert>
</mapper>
